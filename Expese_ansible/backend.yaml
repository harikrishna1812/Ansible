- name: setting up the backend server 
  hosts: Backend
  become: yes
  tasks:

  - name: disabling the nodejs
    ansible.builtin.command: dnf module disable nodejs -y
  - name: enabling the nodejs
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: Enable service mysqld, and not touch the state
    ansible.builtin.dnf:
      name: nodejs
      state: installed 
  - name: Add the user 'expense'
    ansible.builtin.user:
      name: expense
  - name: create a app folder in root folder
    ansible.builtin.file: 
      path: /app
      state: directory

  - name: Download file from a file path
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip
  - name: Unarchive a file that is already on the remote machine
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes
  
  - name: Install packages based on package.json.
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: Copy using inline content
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: starting the backend service
    ansible.builtin.systemd_service:
    state: started
    name: backend

  - name: Enable service httpd and ensure it is not masked
    ansible.builtin.systemd_service:
      name: backend
      enabled: true
      #masked: no
    
  - name: install the mysql 
    ansible.builtin.dnf:
      name: mysql 
      state: installed

  - name: Loading the schema
    ansible.builtin.shell: mysql -h 3.93.17.249 -uroot -pExpenseApp@1 < /app/schema/backend.sql

  - name: Reload service httpd, in all cases
    ansible.builtin.systemd_service:
      name: backend
      state: reloaded